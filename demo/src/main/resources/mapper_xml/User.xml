<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenzhenquan.demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.chenzhenquan.demo.entity.User">
        <id column="id" property="id" />
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="age" property="age"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="detailed_address" property="detailedAddress"/>
    </resultMap>

    <select id="queryUserData" resultMap="BaseResultMap">
        <bind name="pattern" value="'%' + name + '%'" />
        select id, name, age, gender, phone, address, detailed_address from user
        <where>
            <if test="name != null">name like #{pattern}</if>
        </where>
        limit #{startIndex}, #{size}
    </select>

    <select id="userCount" resultType="integer">
        <bind name="pattern" value="'%' + name + '%'" />
        select count(id) from user
        <where>
            <if test="name != null">name like #{pattern}</if>
        </where>
    </select>

    <update id="updateUser">
        update user
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="age != null">age = #{age},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="address != null">address = #{address},</if>
            <if test="detailedAddress != null">detailed_address = #{detailedAddress},</if>
        </set>
        where id = #{id}
    </update>

    <insert id="createUser">
        insert into user(name, phone, age, gender, address, detailed_address)
        values (#{name}, #{phone}, #{age}, #{gender}, #{address}, #{detailedAddress})
    </insert>

    <delete id="deleteUsers">
        delete from user where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>
